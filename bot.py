import os
import random
import logging
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, CallbackQueryHandler

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à)
BOT_TOKEN = "8207712999:AAFq7CTfKvAYpK4cW8VnZ-b7LLHP4ZKCFS0"

# –ß—Ç–µ–Ω–∏–µ —Å–æ–≤–µ—Ç–æ–≤ –∏–∑ —Ñ–∞–π–ª–æ–≤
def read_advice_files():
    """–ß—Ç–µ–Ω–∏–µ —Å–æ–≤–µ—Ç–æ–≤ –∏–∑ —Ñ–∞–π–ª–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—Ç –≤ –≤–∏–¥–µ –∫–æ—Ä—Ç–µ–∂–µ–π"""
    
    # –ß—Ç–µ–Ω–∏–µ –≤—Ä–µ–¥–Ω—ã—Ö —Å–æ–≤–µ—Ç–æ–≤
    try:
        with open('harmful_advice.txt', 'r', encoding='utf-8') as file:
            harmful_advice = tuple(line.strip() for line in file if line.strip())
    except FileNotFoundError:
        harmful_advice = (
            "–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –¥–µ–ª–∞–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –≤–∞–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤",
            "–í—Å–µ–≥–¥–∞ –æ—Å—Ç–∞–≤–ª—è–π—Ç–µ –ø–∞—Ä–æ–ª–∏ –Ω–∞ –≤–∏–¥–Ω–æ–º –º–µ—Å—Ç–µ",
            "–ü–µ–π—Ç–µ –∫–æ—Ñ–µ –ø–µ—Ä–µ–¥ —Å–Ω–æ–º –¥–ª—è –±–æ–¥—Ä–æ—Å—Ç–∏",
            "–û—Ç–∫–ª–∞–¥—ã–≤–∞–π—Ç–µ –≤—Å–µ –¥–µ–ª–∞ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–æ–º–µ–Ω—Ç",
            "–ù–∏–∫–æ–≥–¥–∞ –Ω–µ —á–∏—Ç–∞–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏",
            "–•—Ä–∞–Ω–∏—Ç–µ –≤—Å–µ –¥–µ–Ω—å–≥–∏ –¥–æ–º–∞ –ø–æ–¥ –º–∞—Ç—Ä–∞—Å–æ–º",
            "–ï—à—å—Ç–µ —Ñ–∞—Å—Ç—Ñ—É–¥ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –≤—Ä–µ–º–µ–Ω–∏",
            "–ù–µ –∑–∞–Ω–∏–º–∞–π—Ç–µ—Å—å —Å–ø–æ—Ä—Ç–æ–º - —ç—Ç–æ —É—Ç–æ–º–∏—Ç–µ–ª—å–Ω–æ",
            "–í—Å–µ–≥–¥–∞ —Å–æ–≥–ª–∞—à–∞–π—Ç–µ—Å—å –Ω–∞ —Å–≤–µ—Ä—Ö—É—Ä–æ—á–Ω—É—é —Ä–∞–±–æ—Ç—É –±–µ–∑ –æ–ø–ª–∞—Ç—ã",
            "–ì–æ–≤–æ—Ä–∏—Ç–µ –Ω–∞—á–∞–ª—å–Ω–∏–∫—É –≤—Å—ë, —á—Ç–æ –¥—É–º–∞–µ—Ç–µ"
        )
    
    # –ß—Ç–µ–Ω–∏–µ –ø–æ–ª–µ–∑–Ω—ã—Ö —Å–æ–≤–µ—Ç–æ–≤
    try:
        with open('useful_advice.txt', 'r', encoding='utf-8') as file:
            useful_advice = tuple(line.strip() for line in file if line.strip())
    except FileNotFoundError:
        useful_advice = (
            "–†–µ–≥—É–ª—è—Ä–Ω–æ –¥–µ–ª–∞–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –≤–∞–∂–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö",
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–æ–∂–Ω—ã–µ –ø–∞—Ä–æ–ª–∏ –∏ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é",
            "–°–æ–±–ª—é–¥–∞–π—Ç–µ —Ä–µ–∂–∏–º —Å–Ω–∞ 7-8 —á–∞—Å–æ–≤ –≤ —Å—É—Ç–∫–∏",
            "–ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ –∑–∞–¥–∞—á–∏ –∑–∞—Ä–∞–Ω–µ–µ –∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–π—Ç–µ –≤—Ä–µ–º—è",
            "–ß–∏—Ç–∞–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –Ω–æ–≤—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤",
            "–î–∏–≤–µ—Ä—Å–∏—Ñ–∏—Ü–∏—Ä—É–π—Ç–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è —Ä–∏—Å–∫–æ–≤",
            "–ü–∏—Ç–∞–π—Ç–µ—Å—å —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ –∏ –ø–µ–π—Ç–µË∂≥Â§ü –≤–æ–¥—ã",
            "–ó–∞–Ω–∏–º–∞–π—Ç–µ—Å—å —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é 30 –º–∏–Ω—É—Ç –≤ –¥–µ–Ω—å",
            "–£—á–∏—Ç–µ—Å—å –≥–æ–≤–æ—Ä–∏—Ç—å '–Ω–µ—Ç' –∫–æ–≥–¥–∞ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ",
            "–ü–æ—Å—Ç–æ—è–Ω–Ω–æ –æ–±—É—á–∞–π—Ç–µ—Å—å –Ω–æ–≤—ã–º –Ω–∞–≤—ã–∫–∞–º –∏ –∑–Ω–∞–Ω–∏—è–º"
        )
    
    return harmful_advice, useful_advice

# –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–≤–µ—Ç–æ–≤
HARMFUL_ADVICE, USEFUL_ADVICE = read_advice_files()

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
reply_keyboard = [
    ["üéÅ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Å–æ–≤–µ—Ç", "üíé –ü–ª–∞—Ç–Ω—ã–π —Å–æ–≤–µ—Ç"],
    ["‚ÑπÔ∏è –û –±–æ—Ç–µ"]
]
markup = ReplyKeyboardMarkup(reply_keyboard, resize_keyboard=True)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    welcome_text = (
        f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üëã\n\n"
        "–Ø - –±–æ—Ç —Å–æ–≤–µ—Ç—á–∏–∫! –í—ã–±–µ—Ä–∏ —Ç–∏–ø —Å–æ–≤–µ—Ç–∞:\n"
        "üéÅ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Å–æ–≤–µ—Ç - —Å–ª—É—á–∞–π–Ω—ã–π –≤—Ä–µ–¥–Ω—ã–π —Å–æ–≤–µ—Ç\n"
        "üíé –ü–ª–∞—Ç–Ω—ã–π —Å–æ–≤–µ—Ç - –ø–æ–ª–µ–∑–Ω—ã–π —Å–æ–≤–µ—Ç (–≤–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –æ–ø–ª–∞—Ç–∞)\n\n"
        "–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ!"
    )
    
    await update.message.reply_text(welcome_text, reply_markup=markup)

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    text = update.message.text
    
    if text == "üéÅ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Å–æ–≤–µ—Ç":
        await send_free_advice(update, context)
    elif text == "üíé –ü–ª–∞—Ç–Ω—ã–π —Å–æ–≤–µ—Ç":
        await send_paid_advice(update, context)
    elif text == "‚ÑπÔ∏è –û –±–æ—Ç–µ":
        await about_bot(update, context)
    else:
        await update.message.reply_text(
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ üëá",
            reply_markup=markup
        )

async def send_free_advice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ (–≤—Ä–µ–¥–Ω–æ–≥–æ) —Å–æ–≤–µ—Ç–∞"""
    advice = random.choice(HARMFUL_ADVICE)
    
    response = (
        "üéÅ *–ë–ï–°–ü–õ–ê–¢–ù–´–ô –°–û–í–ï–¢:*\n\n"
        f"‚ö†Ô∏è {advice}\n\n"
        "_–í—Ä–µ–¥–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –º–æ–≥—É—Ç –±—ã—Ç—å –æ–ø–∞—Å–Ω—ã –¥–ª—è –≤–∞—à–µ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è –∏ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏—è!_"
    )
    
    await update.message.reply_text(response, parse_mode='Markdown')

async def send_paid_advice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–ª–∞—Ç–Ω–æ–≥–æ (–ø–æ–ª–µ–∑–Ω–æ–≥–æ) —Å–æ–≤–µ—Ç–∞"""
    advice = random.choice(USEFUL_ADVICE)
    
    # –í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è "–æ–ø–ª–∞—Ç–∞"
    response = (
        "üíé *–ü–õ–ê–¢–ù–´–ô –°–û–í–ï–¢:*\n\n"
        f"‚úÖ {advice}\n\n"
        "üí≥ –° –≤–∞—à–µ–≥–æ —Å—á–µ—Ç–∞ —Å–ø–∏—Å–∞–Ω–æ 100 –º–æ–Ω–µ—Ç\n"
        "_–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! –í–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –Ω–µ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω._"
    )
    
    await update.message.reply_text(response, parse_mode='Markdown')

async def about_bot(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ"""
    info_text = (
        "ü§ñ *–û –±–æ—Ç–µ:*\n\n"
        "–≠—Ç–æ—Ç –±–æ—Ç –≤—ã–¥–∞–µ—Ç –¥–≤–∞ —Ç–∏–ø–∞ —Å–æ–≤–µ—Ç–æ–≤:\n"
        "‚Ä¢ üéÅ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ - –≤—Ä–µ–¥–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –¥–ª—è —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è\n"
        "‚Ä¢ üíé –ü–ª–∞—Ç–Ω—ã–µ - –ø–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è\n\n"
        "–í—Å–µ —Å–æ–≤–µ—Ç—ã –≤—ã–±–∏—Ä–∞—é—Ç—Å—è —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.\n"
        "–î–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å–æ–≤–µ—Ç–∞!"
    )
    
    await update.message.reply_text(info_text, parse_mode='Markdown')

async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    logger.error(f"–û—à–∏–±–∫–∞: {context.error}")
    if update and update.message:
        await update.message.reply_text(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
            reply_markup=markup
        )

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    application.add_error_handler(error_handler)
    
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    application.run_polling()

if __name__ == "__main__":
    main()
